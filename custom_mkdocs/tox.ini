[tox]
envlist =
    py{36,37,38,39,py3}-{unittests,min-req,integration},
    flake8, markdown-lint, linkchecker, jshint, csslint

[testenv]
passenv = LANG
deps=
    py{36,37,38,39,py3}-{unittests,integration}: -rrequirements/project.txt
    py{36,37,38,39,py3}-min-req: -rrequirements/project-min.txt
    py{36,37,38,39,py3}-{unittests,min-req}: -rrequirements/test.txt
commands=
    {envpython} --version
    py{36,37,38,39,py3}-{unittests,min-req}:  {envbindir}/coverage run --source=mkdocs --omit 'mkdocs/tests/*' -m unittest discover -p '*tests.py' mkdocs
    py{36,37,38,39,py3}-unittests: {envbindir}/coverage xml
    py{36,37,38,39,py3}-unittests: {envbindir}/coverage report --show-missing
    py{36,37,38,39,py3}-integration: {envpython} -m mkdocs.tests.integration --output={envtmpdir}/builds

[testenv:flake8]
deps=-rrequirements/test.txt
commands={envbindir}/flake8 mkdocs --max-line-length=119

[testenv:markdown-lint]
whitelist_externals=
    node
    markdownlint
passenv = *
commands=
    node --version
    markdownlint --version
    markdownlint README.md CONTRIBUTING.md docs/ --ignore docs/CNAME

[testenv:linkchecker]
basepython = python2.7
passenv=*
deps=
	mdx_gh_links
	requests<=2.9.0
	LinkChecker
commands=
    {envpython} -m mkdocs.tests.integration --output={envtmpdir}/builds
    linkchecker {envtmpdir}/builds/

[testenv:jshint]
whitelist_externals = jshint
passenv=*
commands=jshint mkdocs/

[testenv:csslint]
whitelist_externals = csslint
passenv=*
commands=csslint mkdocs/
